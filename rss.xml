<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"><channel><title>Deepankar</title><link>https://deep110.github.io</link><description>Welcome to my awesome blog</description><item><title>Simulating Warp Speed in HTML5</title><link>https://deep110.github.io/posts/blogs/2021-02-06-simulating-warp-speed-html5.html</link><description><![CDATA[<p>While rewatching the star wars series, I really liked the warp speed effect, and thought maybe I should try recreating it for fun. So lo and behold I got it working in mostly an hour or so without using any library, just plain old html5 canvas.</p>
]]></description><guid>https://deep110.github.io/posts/blogs/2021-02-06-simulating-warp-speed-html5.html</guid><pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate></item><item><title>Understanding difference between Digital and Paint Colors</title><link>https://deep110.github.io/posts/blogs/2021-01-09-understanding-digital-paint-colors.html</link><description><![CDATA[<p>Before going into the any of this I would like to talk about why I wrote this:</p>
<ul>
<li>I have also been little confused a little with color theory and models in the past</li>
<li>I came across an excellent <a href="https://www.reddit.com/r/askscience/comments/ksgy8l/why_if_i_mix_green_and_red_paints_in_equal/">thread</a> on reddit regarding this and I loved the explanation there.</li>
<li>Few years back I wasted a lot of money to get right color prints of some photos</li>
</ul>
]]></description><guid>https://deep110.github.io/posts/blogs/2021-01-09-understanding-digital-paint-colors.html</guid><pubDate>Sat, 09 Jan 2021 00:00:00 +0000</pubDate></item><item><title>Weekly Log 1 - 2021</title><link>https://deep110.github.io/posts/logs/2021-01-09-weekly-log-1.html</link><description><![CDATA[<p>hello world</p>
]]></description><guid>https://deep110.github.io/posts/logs/2021-01-09-weekly-log-1.html</guid><pubDate>Sat, 09 Jan 2021 00:00:00 +0000</pubDate></item><item><title>Adding TLS/SSL support with APR Network library and OpenSSL</title><link>https://deep110.github.io/posts/blogs/2020-12-29-tls-with-apr.html</link><description><![CDATA[<p>During my work at <a href="https://vernacular.ai">vernacular.ai</a> I came across a problem in our telephony setup. Some of our clients wanted TLS support even if the setup runs on premise without any internet access.</p>
]]></description><guid>https://deep110.github.io/posts/blogs/2020-12-29-tls-with-apr.html</guid><pubDate>Tue, 29 Dec 2020 00:00:00 +0000</pubDate></item><item><title>GRPC Authentication and Authorization</title><link>https://deep110.github.io/posts/blogs/2020-03-04-grcp-auth.html</link><description><![CDATA[<p>In gRPC there are number of ways you can add authentication between client and server. It is handled via Credentials Objects.</p>
]]></description><guid>https://deep110.github.io/posts/blogs/2020-03-04-grcp-auth.html</guid><pubDate>Wed, 04 Mar 2020 00:00:00 +0000</pubDate></item><item><title>Cauldron - Audio Decoding Library in Rust</title><link>https://deep110.github.io/projects.html</link><description><![CDATA[<p>Some part of my work at <a href="https://vernacular.ai">vernacular.ai</a> involved working with audio and streaming. I wanted to understand audio codecs, so I implemented some of the popular decoders [wav, flac, mp3] in Rust. Library is also available on <a href="https://crates.io/crates/cauldron">crates.io</a>.</p>
]]></description><guid>https://deep110.github.io/projects.html</guid><pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate></item><item><title>Coal - Linux Container like Docker</title><link>https://deep110.github.io/projects.html</link><description><![CDATA[<p>This is a demo application showing how linux containers can be used to create docker like environment. It creates a new process that have its own process-id (pid) tree, network and host. It also dives little into control groups to place limits on number of process that can be started by the application.</p>
]]></description><guid>https://deep110.github.io/projects.html</guid><pubDate>Thu, 16 May 2019 00:00:00 +0000</pubDate></item><item><title>Implementing your Own 2D game engine</title><link>https://deep110.github.io/posts/blogs/2019-01-13-implementing-2D-game-engine.html</link><description><![CDATA[<p>First of all, you would think that when there are so many game engines out there why
would you want to implement your own. Well it may be that you don't like any of them, or just thinking of starting a game and implementing your own engine might be a good idea, then please don't do it and this article might not be for you. But if you (like me), want to learn nitty-gritty of a physics engine, this could be a good exercise.</p>
]]></description><guid>https://deep110.github.io/posts/blogs/2019-01-13-implementing-2D-game-engine.html</guid><pubDate>Sun, 13 Jan 2019 00:00:00 +0000</pubDate></item><item><title>Lucid Engine - 2D Physics Engine</title><link>https://deep110.github.io/projects.html</link><description><![CDATA[<p>Tried my hands on creating a 2D physics engine. It uses Newton's laws of motion and conservation of momentum to solve collision constraints. You can find the detailed writeup <a href="https://deep110.github.io/posts/blogs/2019-01-13-implementing-2D-game-engine.html">here</a> explaining the concepts I used.</p>
]]></description><guid>https://deep110.github.io/projects.html</guid><pubDate>Sun, 13 Jan 2019 00:00:00 +0000</pubDate></item><item><title>Hello World!</title><link>https://deep110.github.io/posts/blogs/2018-04-17-hello-world.html</link><description><![CDATA[<p>Finally, I have done it, my first blog has been compiled successfully.</p>
]]></description><guid>https://deep110.github.io/posts/blogs/2018-04-17-hello-world.html</guid><pubDate>Tue, 17 Apr 2018 00:00:00 +0000</pubDate></item><item><title>Splitter - Android Game</title><link>https://deep110.github.io/projects.html</link><description><![CDATA[<p>It is a endless 2D mobile game, where aim is to just avoid the all the spikes and climb higher. Game is developed on Unity Engine, so it can be build for both Android and IOS.</p>
]]></description><guid>https://deep110.github.io/projects.html</guid><pubDate>Wed, 05 Oct 2016 00:00:00 +0000</pubDate></item><item><title>FlashDict - Chrome Extension</title><link>https://deep110.github.io/projects.html</link><description><![CDATA[<p>Sometimes, do you feel too lazy to search for a difficult word's meaning you encounter while reading an article on web, then this extension can really solve your problem. Get the meaning of the selected word instantly by double clicking on the word, without opening the new tab and searching it manually.</p>
]]></description><guid>https://deep110.github.io/projects.html</guid><pubDate>Sat, 17 Sep 2016 00:00:00 +0000</pubDate></item></channel></rss>
