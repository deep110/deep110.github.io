<?xml version="1.0" encoding="utf-8"?><rss version="2.0"><channel><title>Deepankar</title><link>https://deep110.github.io</link><description>Welcome to my awesome blog</description><item><title>Terrain Generation and Editing using Marching Cubes</title><link>https://deep110.github.io/posts/blogs/2022-06-25-terrain-editor-marching-cubes.html</link><description><![CDATA[<div class="footnote-definition" id="rf_pb"><sup class="footnote-definition-label">1</sup>
<p><a href="http://paulbourke.net/geometry/polygonise/">Implementation by Paul Broke</a>
<sup class="footnote-reference"><a href="#rf_3js">2</a></sup>: <a href="https://github.com/mrdoob/three.js/blob/master/examples/webgl_marchingcubes.html">Three.js marching cubes demo</a>
<sup class="footnote-reference"><a href="#rf_wiki">3</a></sup>: <a href="https://wikipedia.org/wiki/Marching_cubes">Wikipedia - Marching Cubes</a>
<sup class="footnote-reference"><a href="#rf_sl">4</a></sup>: <a href="https://www.youtube.com/watch?v=M3iI2l0ltbE">Marching Cubes by Sebastian Lague</a></p>
<div id="canvas-container" style="position: relative;">
  <canvas id="main-canvas" height=500 width=740></canvas>
  <svg id="toggle-fs"><circle cx="16" cy="16" r="14" style="fill: rgb(255, 255, 255); stroke: rgb(204, 204, 204); stroke-width: 4;"><title>Toggle fullscreen</title></circle><path transform="translate(16,16)rotate(-45)scale(5)translate(-1.85,0)" d="M0,0L0,.5 2,.5 2,1.5 4,0 2,-1.5 2,-.5 0,-.5Z" style="pointer-events: none; fill: rgb(170, 170, 170);"></path>
</svg>
  <div id="gui-canvas-main" class="gui-canvas"></div>
  <div id="index-canvas-main">Long Press on Terrain to Edit It</div>
</div></div>
]]></description><guid>https://deep110.github.io/posts/blogs/2022-06-25-terrain-editor-marching-cubes.html</guid><pubDate>Sat, 25 Jun 2022 00:00:00 +0000</pubDate></item><item><title>Turkey - Rich in history</title><link>https://deep110.github.io/posts/travel/2022-05-13-turkey.html</link><description><![CDATA[<p>Before going I did my research, but I was not ready for the natural beauty and culture that I experienced. The trip was an exhilarating - from cities to beaches, boat trips to islands and gorgeous hills gradually dropping down to magnificent blue sea. The view of cappadocia valleys from the hot air balloon was breathtaking. Since, I love history my time in Ephesus &amp; Hierapolis ruins felt very insufficient. The tourist guides were really cool, helpful and knew better English than most of our hotel receptionists.</p>
]]></description><guid>https://deep110.github.io/posts/travel/2022-05-13-turkey.html</guid><pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate></item><item><title>Uniform Random Distribution using Poisson Disc Sampling</title><link>https://deep110.github.io/posts/blogs/2022-01-15-uniform-dist-poisson-disc-sampling.html</link><description><![CDATA[<div class="footnote-definition" id="robert"><sup class="footnote-definition-label">1</sup>
<p><a href="https://www.cs.ubc.ca/%7Erbridson/docs/bridson-siggraph07-poissondisk.pdf">Fast Poisson Disk Sampling in Arbitrary Dimensions</a> by Robert Bridson, University of British Columbia
<sup class="footnote-reference"><a href="#wikipedia">2</a></sup>: <a href="https://en.wikipedia.org/wiki/Supersampling#Poisson_disk">Wikipedia</a></p>
<div id="canvas-container">
  <canvas id="canvas" height=500 width=740></canvas></div>
]]></description><guid>https://deep110.github.io/posts/blogs/2022-01-15-uniform-dist-poisson-disc-sampling.html</guid><pubDate>Sat, 15 Jan 2022 00:00:00 +0000</pubDate></item><item><title>Generating Convex Hull using Graham Scan</title><link>https://deep110.github.io/posts/blogs/2021-06-26-convex-hull-graham-scan.html</link><description><![CDATA[<p>I am trying to experiment with rendering some basic shapes on a pixel buffer for another <a href="https://github.com/deep110/verlet.rs">side project</a> of mine. After trying out a few rust crates out there and not liking any, I eventually fell into the classic software engineering trap and wrote a small library - <a href="https://github.com/deep110/ada">ada</a>. It supports some basic shapes like - Line2D, Rectangle2D, Ellipse2D, Polygon2D and Bezier2D.</p>
]]></description><guid>https://deep110.github.io/posts/blogs/2021-06-26-convex-hull-graham-scan.html</guid><pubDate>Sat, 26 Jun 2021 00:00:00 +0000</pubDate></item><item><title>Ada - 2D Primitive shapes Rendering Library</title><link>https://deep110.github.io/projects.html</link><description><![CDATA[<p>Its a 2D Shapes pixel rendering library in rust. Some supported shapes are Line2D, Rectangle2D, Ellipse2D, Polygon2D and Bezier2D [Both quadratic and cubic]. I was working on creating a <a href="https://github.com/deep110/verlet.rs">verlet physics</a> based system and wanted to visualize some output quickly. I explored some crates but didn't found anything good out there for pixel buffer.</p>
]]></description><guid>https://deep110.github.io/projects.html</guid><pubDate>Sun, 23 May 2021 00:00:00 +0000</pubDate></item><item><title>Natural Looking Trees with Stochastic L-Systems</title><link>https://deep110.github.io/posts/blogs/2021-05-07-natural-trees-with-stochastic-L-system.html</link><description><![CDATA[<div class="footnote-definition" id="fn1"><sup class="footnote-definition-label">1</sup>
<p>Here X is a constant i.e it will get ignored during rendering. For more in-depth see <a href="#rendering">rendering</a> section. Dummy variables are used to give a more realistic look to generated fractal trees.
<a href="https://www.nomanssky.com/">No Man's Sky</a> is built around a procedurally generated deterministic open world universe with too many planets to be explored realistically. It is claimed that they used <a href="https://en.wikipedia.org/wiki/Superformula">Superformula</a> and <a href="https://en.wikipedia.org/wiki/L-system">L-Systems</a> for generating flora and  fauna procedurally. So, I tried playing around with L systems and see if I can create some realistic looking trees.</p>
</div>
]]></description><guid>https://deep110.github.io/posts/blogs/2021-05-07-natural-trees-with-stochastic-L-system.html</guid><pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate></item><item><title>Simulating Warp Speed in HTML5</title><link>https://deep110.github.io/posts/blogs/2021-02-06-simulating-warp-speed-html5.html</link><description><![CDATA[<p>While rewatching the star wars series, I really liked the warp speed effect, and thought maybe I should try recreating it for fun. So lo and behold I got it working in mostly an hour or so without using any library, just plain old html5 canvas.</p>
]]></description><guid>https://deep110.github.io/posts/blogs/2021-02-06-simulating-warp-speed-html5.html</guid><pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate></item><item><title>Understanding difference between Digital and Paint Colors</title><link>https://deep110.github.io/posts/blogs/2021-01-09-understanding-digital-paint-colors.html</link><description><![CDATA[<p>Before going into the any of this I would like to talk about why I wrote this:</p>
<ul>
<li>I have always been little confused with color theory and models in the past</li>
<li>I came across an excellent <a href="https://www.reddit.com/r/askscience/comments/ksgy8l/why_if_i_mix_green_and_red_paints_in_equal/">thread</a> on reddit regarding this and I loved the explanation there.</li>
<li>Few years back I wasted a lot of money to get right color prints of some photos</li>
</ul>
]]></description><guid>https://deep110.github.io/posts/blogs/2021-01-09-understanding-digital-paint-colors.html</guid><pubDate>Sat, 09 Jan 2021 00:00:00 +0000</pubDate></item><item><title>Adding TLS/SSL support with APR Network library and OpenSSL</title><link>https://deep110.github.io/posts/blogs/2020-12-29-tls-with-apr.html</link><description><![CDATA[<p>During my work at <a href="https://vernacular.ai">vernacular.ai</a> I came across a problem in our telephony setup. Some of our clients wanted TLS support even if the setup runs on premise without any internet access.</p>
]]></description><guid>https://deep110.github.io/posts/blogs/2020-12-29-tls-with-apr.html</guid><pubDate>Tue, 29 Dec 2020 00:00:00 +0000</pubDate></item><item><title>GRPC Authentication and Authorization</title><link>https://deep110.github.io/posts/blogs/2020-03-04-grcp-auth.html</link><description><![CDATA[<p>In gRPC there are number of ways you can add authentication between client and server. It is handled via Credentials Objects.</p>
]]></description><guid>https://deep110.github.io/posts/blogs/2020-03-04-grcp-auth.html</guid><pubDate>Wed, 04 Mar 2020 00:00:00 +0000</pubDate></item><item><title>Cauldron - Audio Decoding Library in Rust</title><link>https://deep110.github.io/projects.html</link><description><![CDATA[<p>Some part of my work at <a href="https://vernacular.ai">vernacular.ai</a> involved working with audio and streaming. I wanted to understand audio codecs, so I implemented some of the popular decoders [wav, flac, mp3] in Rust. Library is also available on <a href="https://crates.io/crates/cauldron">crates.io</a>.</p>
]]></description><guid>https://deep110.github.io/projects.html</guid><pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate></item><item><title>Dubai &amp; Abu Dhabi - City of Skyscrapers</title><link>https://deep110.github.io/posts/travel/2019-11-28-uae.html</link><description><![CDATA[<p>hello world</p>
]]></description><guid>https://deep110.github.io/posts/travel/2019-11-28-uae.html</guid><pubDate>Thu, 28 Nov 2019 00:00:00 +0000</pubDate></item><item><title>Coal - Linux Container like Docker</title><link>https://deep110.github.io/projects.html</link><description><![CDATA[<p>This is a demo application showing how linux containers can be used to create docker like environment. It creates a new process that have its own process-id (pid) tree, network and host. It also dives little into control groups to place limits on number of process that can be started by the application.</p>
]]></description><guid>https://deep110.github.io/projects.html</guid><pubDate>Thu, 16 May 2019 00:00:00 +0000</pubDate></item><item><title>Implementing your Own 2D game engine</title><link>https://deep110.github.io/posts/blogs/2019-01-13-implementing-2D-game-engine.html</link><description><![CDATA[<p>First of all, you would think that when there are so many game engines out there why
would you want to implement your own. Well it may be that you don't like any of them, or just thinking of starting a game and implementing your own engine might be a good idea, then please don't do it and this article might not be for you. But if you (like me), want to learn nitty-gritty of a physics engine, this could be a good exercise.</p>
]]></description><guid>https://deep110.github.io/posts/blogs/2019-01-13-implementing-2D-game-engine.html</guid><pubDate>Sun, 13 Jan 2019 00:00:00 +0000</pubDate></item><item><title>Lucid Engine - 2D Physics Engine</title><link>https://deep110.github.io/projects.html</link><description><![CDATA[<p>Tried my hands on creating a 2D physics engine. It uses Newton's laws of motion and conservation of momentum to solve collision constraints. You can find the detailed writeup <a href="https://deep110.github.io/posts/blogs/2019-01-13-implementing-2D-game-engine.html">here</a> explaining the concepts I used.</p>
]]></description><guid>https://deep110.github.io/projects.html</guid><pubDate>Sun, 13 Jan 2019 00:00:00 +0000</pubDate></item><item><title>Hello World!</title><link>https://deep110.github.io/posts/blogs/2018-04-17-hello-world.html</link><description><![CDATA[<p>Finally, I have done it, my first blog has been compiled successfully.</p>
]]></description><guid>https://deep110.github.io/posts/blogs/2018-04-17-hello-world.html</guid><pubDate>Tue, 17 Apr 2018 00:00:00 +0000</pubDate></item><item><title>Splitter - Android Game</title><link>https://deep110.github.io/projects.html</link><description><![CDATA[<p>It is a endless 2D mobile game, where aim is to just avoid the all the spikes and climb higher. Game is developed on Unity Engine, so it can be build for both Android and IOS.</p>
]]></description><guid>https://deep110.github.io/projects.html</guid><pubDate>Wed, 05 Oct 2016 00:00:00 +0000</pubDate></item><item><title>FlashDict - Chrome Extension</title><link>https://deep110.github.io/projects.html</link><description><![CDATA[<p>Sometimes, do you feel too lazy to search for a difficult word's meaning you encounter while reading an article on web, then this extension can really solve your problem. Get the meaning of the selected word instantly by double clicking on the word, without opening the new tab and searching it manually.</p>
]]></description><guid>https://deep110.github.io/projects.html</guid><pubDate>Sat, 17 Sep 2016 00:00:00 +0000</pubDate></item></channel></rss>
